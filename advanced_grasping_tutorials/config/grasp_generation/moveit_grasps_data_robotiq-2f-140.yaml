robotiq_2f_140:  
  # =====================================================
  # Robotiq-2f-140 Data
  end_effector_name: 'gripper'  # ee group name
  end_effector_type: 'finger'  # 'finger' or 'suction'

  # x/y translation and angle orientation grasp resolution parameters used for sampling grasp candidates
  grasp_resolution : 0.01  # meter
  angle_resolution : 90    # degrees

  # min/max values of the grasp depth range in meter.
  # This should fit to the distance from finger tip to inner palm or the suction cup stroke
  grasp_max_depth : 0.05
  grasp_min_depth : 0.0
  # grasp_depth_resolution is the discretization distance in meter used for sampling the grasp depth value.
  # Idealy this should be a small fraction of the depth range (i.e. 0.005).
  # If the value exceeds the depth distance range grasp_max_depth is used by default.
  grasp_depth_resolution : 0.01

  # A grasp motion is composed of three linear paths: approach, retreat, lift
  # The values below define the desired distances of each path.
  # Length of approach path (this is in addition to the grasp_max_depth)
  approach_distance_desired: 0.01  # approach path (in addition to grasp_max_depth)
  retreat_distance_desired: 0.05   # retreat path (in addition to grasp_max_depth)
  lift_distance_desired: 0.01      # lift path (used as MINIMUM safety distance from surface)

  # minimum padding on each side of the object on approach
  grasp_padding_on_approach: 0.01  # meter

  # We need to know the transform from the arm IK link to the grasp point. By default we define the transform manually with
  # `tcp_to_eef_mount_transform`. Alternatively, we can set this to a frame in the robot model and compute the transform
  # automatically. this is done by setting `define_tcp_by_name: true` and providing a value for `tcp_name`.
  #
  # Distance from the eef mount to the palm of end effector [x, y, z, r, p, y]
  # z-axis pointing toward object to grasp
  # x-axis perp. to movement of grippers
  # y-axis parallel to movement of grippers
  # If we have a tool center point frame, we would set:
  define_tcp_by_name: true
  tcp_name: "gripper_grasping_frame_Z"
  # Alternatively, if we cannot add a frame for the tool center point, we can define tcp by transform
  # tcp_to_eef_mount_transform :  [0, 0, -0.105, 0, 0, -0.7853] # NOTE: Imaginary point in the middle


  # Robotiq
  joints : ['gripper_finger_joint']
  pregrasp_posture : [0.04]  # open position
  grasp_posture : [0.0]      # close position


  # Target durations in seconds for reaching pregrasp and grasp positions in end effector motions
  pregrasp_time_from_start : 0.0
  grasp_time_from_start : 0.0

  ##############################
  ##  Finger gripper parameters
  ##############################
  # Distances between fingers matching to pregrasp_posture and grasp_posture, in meters
  max_finger_width: 0.140
  min_finger_width: 0.06

  # Maximum allowed finger width for a grasp.
  # This value should be considerably smaller than max_finger_width
  # to allow padded collision checks
  max_grasp_width: 0.125

  # width of gripper fingers to ensure the finger tips fully overlap the object
  gripper_finger_width : 0.015

